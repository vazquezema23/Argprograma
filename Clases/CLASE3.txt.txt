CLASE 3
1-	 
a.	package prueba;

public class proyecto {
	
	
	public static int contarCaracteres(String cadenaTexto, char caracter)
	{
	     int pos=0;
	     int contador=0;
	     pos=cadenaTexto.indexOf(caracter);
	        while (pos!=-1) 
	        { 
	         contador++;                                
	         pos=cadenaTexto.indexOf(caracter,pos+1);
	        }
	        return contador; 
	        
	}
	        
    public static void main (String args[])
    {
    	
         char car='o';
    	int cont=contarCaracteres(«ascendente» ,'car');
    			System.out.println («El caracter «+car+» se repite«+cont+» veces»);
    }

b.	

package prueba;

import java.util.Arrays;

public class numeros {

	public static void main(String[] args) {
		int numeros [] = {1,2,3} ;
		Arrays.sort(numeros);
		for (int i  = 0; i < numeros.length; i++) {
			System.out.println(""+numeros[i]) ;
			
			
		}
	}

}

c.	package prueba;

public class suma {

	public static void main(String[] args) {
		int vector []= {4, 8, 12, 20} ;
	    int numeroX= 9;
	    int suma=0;

	    for (int i=0; i<vector.length; i++) {

	      if (vector[i]>numeroX) {
	        suma+= vector[i] ;
	      }
	    }
	    System.out.println(suma);

	}

}




d.	
                public class DesplazamientoUno {
    
    // Método para codificar el texto con desplazamiento de 1
    public static String codificar(String texto) {
        String textoCodificado = "";
        for (int i = 0; i < texto.length(); i++) {
            char letra = texto.charAt(i);
            if (letra >= 'a' && letra <= 'z') {
                letra = (char) (letra + 1);
                if (letra > 'z') {
                    letra = (char) ('a' + (letra - 'z' - 1));
                }
            } else if (letra >= 'A' && letra <= 'Z') {
                letra = (char) (letra + 1);
                if (letra > 'Z') {
                    letra = (char) ('A' + (letra - 'Z' - 1));
                }
            }
            textoCodificado += letra;
        }
        return textoCodificado;
    }
    
    // Método para decodificar el texto con desplazamiento de 1
    public static String decodificar(String textoCodificado) {
        String textoDecodificado = "";
        for (int i = 0; i < textoCodificado.length(); i++) {
            char letra = textoCodificado.charAt(i);
            if (letra >= 'a' && letra <= 'z') {
                letra = (char) (letra - 1);
                if (letra < 'a') {
                    letra = (char) ('z' - ('a' - letra - 1));
                }
            } else if (letra >= 'A' && letra <= 'Z') {
                letra = (char) (letra - 1);
                if (letra < 'A') {
                    letra = (char) ('Z' - ('A' - letra - 1));
                }
            }
            textoDecodificado += letra;
        }
        return textoDecodificado;
    }
    
    // Método main para probar la clase
    public static void main(String[] args) {
        String textoOriginal = "Hola que tal";
        String textoCodificado = codificar(textoOriginal);
        String textoDecodificado = decodificar(textoCodificado);
        System.out.println("Texto original: " + textoOriginal);
        System.out.println("Texto codificado: " + textoCodificado);
        System.out.println("Texto decodificado: " + textoDecodificado);
    }
}

